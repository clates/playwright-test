name: Post Worldbuilder Regression
on:
  issue_comment:
    types: [created]

jobs:
  pr_commented:
    # This job only runs for pull request comments
    name: PR comment
    if: ${{ github.event.issue.pull_request }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      # Extract the world from the comment and run the test
      # Integration Test World URL (client-app-ci-pr-8693-24-stage-world): ðŸ‘‰ https://client-app-ci-pr-8693-24-stage-world.crunchbase.io/
      - id: extract
        run: |
          echo "Extracting world URL from comment"
          echo $EVENT
          BASE_URL="${EVENT#*ðŸ‘‰ }"
          if [[ $BASE_URL =~ ^https:\/\/(.*)\.?crunchbase\.(io|com)(\/?.*)*$ ]]
          then
                echo "Comment contained trigger $BASE_URL"
                echo "World URL is valid"
                echo "::set-output name=world_url::$BASE_URL"  
                exit 0
          else
                echo "No Trigger Found" >> $GITHUB_STEP_SUMMARY
                exit 1
          fi
        env:
          NUMBER: ${{ github.event.issue.number }}
          EVENT: ${{ github.event.comment.body }}
      - id: runPlaywright
        run: |
          echo "Running playwright test"
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      - name: Run Playwright tests
        run: |
          CI=true BASE_URL="https://www.crunchbase.com/buy/cb-starter" npx playwright test --update-snapshots
          CI=true BASE_URL=${{ steps.extract.outputs.world_url }} npx playwright test
      - name: Generate offending test comments
        if: ${{ always() }}
        run: |
          echo "Found the following offending tests: "
          find . -name "*diff.png"
          echo "Generating offending test comments to base64 image files"
          find . -name "*diff.png" -exec sh -c 'base64 -w 0 $1 > "$1.base64"' -- {} \;
          prepend="![Hello World](data:image/png;base64, "
          postpend=")"
          echo "Generated the base64 image files"
          find . -name "*.base64"

          echo "Generating summary.out file"
          find . -name "*.base64" | while read file; do echo "$prepend$(cat $file)$postpend" >> summary.out; done        
          echo  $(cat results.json)>> $GITHUB_STEP_SUMMARY    
          echo  $(cat summary.out)>> $GITHUB_STEP_SUMMARY
      - name: Upload test results
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: test-results
          path: test-results
    outputs:
      world_url: ${{ steps.extract.outputs.world_url }}

    #   - run: |
    #         echo "Running playwright test"
    #         npm install
    #         npm run test:playwright
#   blah:
#     name: Create pull request
#     uses: actions/github-script@v6.4.1
#     with:
#         # github-token: ${{ secrets.CI_GITHUB_TOKEN }}
#         script: |
#             const script = require('./.github/scripts/triggerPlaywright.js');
#             await script(github, context, core);
